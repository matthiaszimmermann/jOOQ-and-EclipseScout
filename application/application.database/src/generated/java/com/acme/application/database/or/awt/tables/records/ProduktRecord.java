/*
 * This file is generated by jOOQ.
*/
package com.acme.application.database.or.awt.tables.records;


import com.acme.application.database.or.awt.tables.Produkt;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProduktRecord extends UpdatableRecordImpl<ProduktRecord> implements Record6<String, String, String, String, Integer, Boolean> {

    private static final long serialVersionUID = 1799623151;

    /**
     * Setter for <code>awt.PRODUKT.ID</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>awt.PRODUKT.ID</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>awt.PRODUKT.BEZEICHNUNG</code>.
     */
    public void setBezeichnung(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>awt.PRODUKT.BEZEICHNUNG</code>.
     */
    public String getBezeichnung() {
        return (String) get(1);
    }

    /**
     * Setter for <code>awt.PRODUKT.FAMILIE</code>.
     */
    public void setFamilie(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>awt.PRODUKT.FAMILIE</code>.
     */
    public String getFamilie() {
        return (String) get(2);
    }

    /**
     * Setter for <code>awt.PRODUKT.ART</code>.
     */
    public void setArt(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>awt.PRODUKT.ART</code>.
     */
    public String getArt() {
        return (String) get(3);
    }

    /**
     * Setter for <code>awt.PRODUKT.BESTAND_MIN</code>.
     */
    public void setBestandMin(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>awt.PRODUKT.BESTAND_MIN</code>.
     */
    public Integer getBestandMin() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>awt.PRODUKT.ACTIVE</code>.
     */
    public void setActive(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>awt.PRODUKT.ACTIVE</code>.
     */
    public Boolean getActive() {
        return (Boolean) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<String, String, String, String, Integer, Boolean> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<String, String, String, String, Integer, Boolean> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Produkt.PRODUKT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Produkt.PRODUKT.BEZEICHNUNG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Produkt.PRODUKT.FAMILIE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Produkt.PRODUKT.ART;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Produkt.PRODUKT.BESTAND_MIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field6() {
        return Produkt.PRODUKT.ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getBezeichnung();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getFamilie();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getArt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getBestandMin();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value6() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProduktRecord value1(String value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProduktRecord value2(String value) {
        setBezeichnung(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProduktRecord value3(String value) {
        setFamilie(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProduktRecord value4(String value) {
        setArt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProduktRecord value5(Integer value) {
        setBestandMin(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProduktRecord value6(Boolean value) {
        setActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProduktRecord values(String value1, String value2, String value3, String value4, Integer value5, Boolean value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProduktRecord
     */
    public ProduktRecord() {
        super(Produkt.PRODUKT);
    }

    /**
     * Create a detached, initialised ProduktRecord
     */
    public ProduktRecord(String id, String bezeichnung, String familie, String art, Integer bestandMin, Boolean active) {
        super(Produkt.PRODUKT);

        set(0, id);
        set(1, bezeichnung);
        set(2, familie);
        set(3, art);
        set(4, bestandMin);
        set(5, active);
    }
}
